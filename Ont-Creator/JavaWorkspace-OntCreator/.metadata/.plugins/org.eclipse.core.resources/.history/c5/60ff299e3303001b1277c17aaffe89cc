package single_cell;

import java.util.List;

import org.apache.jena.ontology.Individual;
import org.apache.jena.ontology.OntClass;
import org.apache.jena.rdf.model.Property;
import org.json.JSONObject;

public class MyIndividual {

	private String id;
	
	private JSONObject jsonIndividual;
	
	private Individual individual;
	private MyModel model;

	private String readStringFromJson(JSONObject jsonObject, String field) {
		String string = null;

		try {
			string = jsonObject.getString(field);
		} catch (Exception e) {
			return null;
		}

		return string;
	}

	private Integer readIntegerFromJson(JSONObject jsonObject, String field) {
		Integer integer = null;

		try {
			integer = jsonObject.getInt(field);
		} catch (Exception e) {
			return null;
		}

		return integer;
	}

	private void addClassToInd(String className) {
		if (className == null)
			return;

		OntClass classModel = model.getOntClass(className);

		if (classModel == null)
			return;

		individual.addOntClass(classModel);
	}

	public MyIndividual(JSONObject jsonIndividual, MyModel model) {
		initIndividual(jsonIndividual);

		this.model = model;
	}

	private void initIndividual(JSONObject jsonIndividual) {

		this.id = readStringFromJson(jsonIndividual, "ID");
		
		this.jsonIndividual = jsonIndividual;
		
	}
	
	public Boolean addToModel() {
		
		// Add classes
		for (String className : MyModel.CLASSES) {
			try {
				List<Object> list = jsonIndividual.getJSONObject("Classes").getJSONArray(className).toList();
				for (Object ontClass : list) {
					model.createIndividual(id, MyModel.PREDICATE_CLASS, (String) ontClass);
				}
			} catch (Exception e) {
				// TODO: handle exception
			}

		}
		
		// Add object properties
		for (String propertyName : MyModel.OBJECT_PROPERTIES) {
			try {
				List<Object> list = jsonIndividual.getJSONObject("ObjectProperties").getJSONArray(propertyName).toList();
				for (Object propertyValue : list) {
					model.createIndividual(id, propertyName, (String) propertyValue);
				}
			} catch (Exception e) {
				// TODO: handle exception
			}

		}
		
		// Add data properties
		for (String propertyName : MyModel.DATA_PROPERTIES) {
			try {
				List<Object> list = jsonIndividual.getJSONObject("DataProperties").getJSONArray(propertyName).toList();
				for (Object propertyValue : list) {
					model.createIndividual(id, propertyName, (String) propertyValue);
				}
			} catch (Exception e) {
				// TODO: handle exception
			}

		}
				
		System.out.println("Individual " + id + " added to model.");

		return true;
	}


}
